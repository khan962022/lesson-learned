pipeline{
  agent any
  tools{
    maven "MAVEN3"
    jdk "JDK8"
  }
  stages{
    stage('Fectch code'){
     steps{
       git branch: 'vp-rem', url: 'https://github.com/devopshydclub/vprofile-repo.git'
      }
    }
    stage('Build code'){
     steps{
        sh 'mvn install -DskipTests'
      }
     post{
       success{
         echo 'Now archiving it'
         archiveArtifacts artifacts: '**/*.war'
        }  
      }
    }
    stage('Unit Tests'){
      steps{
        sh 'mvn test'
      }
    }
    stage('CODE ANALYSIS with SONARQUBE') {
          
		  environment {
             scannerHome = tool 'SonarQubeScanner'
          }

          steps {
            withSonarQubeEnv('sonar') {
               sh '''${scannerHome}/bin/sonar-scanner -Dsonar.projectKey=vprofile \
                   -Dsonar.projectName=vprofile-repo \
                   -Dsonar.projectVersion=1.0 \
                   -Dsonar.sources=src/ \
                   -Dsonar.java.binaries=target/test-classes/com/visualpathit/account/controllerTest/ \
                   -Dsonar.junit.reportsPath=target/surefire-reports/ \
                   -Dsonar.jacoco.reportsPath=target/jacoco.exec \
                   -Dsonar.java.checkstyle.reportPaths=target/checkstyle-result.xml'''
            }

            timeout(time: 10, unit: 'MINUTES') {
               waitForQualityGate abortPipeline: true
            }
          }
        }
  }
}
