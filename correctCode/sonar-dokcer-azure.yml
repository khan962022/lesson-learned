# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '7dc89b47-32b2-4428-8f2f-e1623439e440'
  imageRepository: 'sqldbdocker'
  containerRegistry: 'appdbregistry.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/sqlapp/Dockerfile'
  tag: '$(Build.BuildId)'
  buildConfiguration: Release
  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    #container: mcr.microsoft.com/dotnet/sdk:6.0
    steps:
    - task: UseDotNet@2
      displayName: Install .NET6
      inputs:
        packageType: 'sdk'
        version: '6.x'
    - task: SonarCloudPrepare@1
      inputs:
        SonarCloud: 'sonarcloud'
        organization: 'devopsprojects-khan'
        scannerMode: 'MSBuild'
        projectKey: 'devopsprojects-khan_dockerdevops'
        projectName: 'dockerdevops'
        extraProperties: |
          sonar.cs.opencover.reportsPaths='$(System.DefaultWorkingDirectory)/**/test/coverage.cobertura.xml'
  
    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        command: build
        projects: '**/sqlapp.csproj'
        arguments: '--configuration $(buildConfiguration)'

    - task: DotNetCoreCLI@2
      displayName: Publish
      inputs:
        command: publish
        publishWebProjects: True
        zipAfterPublish: false
        arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'

    - task: DotNetCoreCLI@2
      displayName: Running tests
      inputs:
        command: 'test' 
        projects: '**/test.csproj'
        arguments: '/p:CollectCoverage=true /p:CoverletOutputFormat=cobertura'
        nobuild: false
        publishTestResults: true
    
    - task: PublishCodeCoverageResults@1
      displayName: 'Cobertura'
      inputs:
        codeCoverageTool: 'Cobertura'
        summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/test/coverage.cobertura.xml'

    - task: SonarCloudAnalyze@1
      displayName: 'Run Sonar Analysis'
    
    - task: SonarCloudPublish@1
      displayName: 'Publish Sonar Results'
      inputs:
        pollingTimeoutSec: '300'
    
    - publish: '$(Build.ArtifactStagingDirectory)'
      displayName: 'Publish build'
      artifact: buildartifacts

- stage: Deploy
  displayName: Push stage
  jobs:
  - job: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    
    steps:
    - download: current
      artifact: buildartifacts

    
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        buildContext: '$(Pipeline.Workspace)/buildartifacts/sqlapp'
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
          latest
